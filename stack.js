// Generated by CoffeeScript 1.10.0
var dupl, pop, pop_frame, push, push_frame, restore, save, swap, tos;

tos = 0;

push = function(p) {
  if (stack + tos >= frame) {
    stop("stack overflow");
  }
  return stack[tos++] = p;
};

pop = function() {
  if (tos === 0) {
    stop("stack underflow");
  }
  return stack[--tos];
};

push_frame = function(n) {
  var i, j, ref, results;
  i = 0;
  frame -= n;
  if (frame < stack + tos) {
    stop("frame overflow, circular reference?");
  }
  results = [];
  for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    results.push(frame[i] = symbol(NIL));
  }
  return results;
};

pop_frame = function(n) {
  frame += n;
  if (frame > stack + TOS) {
    return stop("frame underflow");
  }
};

save = function() {
  frame -= 10;
  if (frame < stack + tos) {
    stop("frame overflow, circular reference?");
  }
  frame[0] = p0;
  frame[1] = p1;
  frame[2] = p2;
  frame[3] = p3;
  frame[4] = p4;
  frame[5] = p5;
  frame[6] = p6;
  frame[7] = p7;
  frame[8] = p8;
  return frame[9] = p9;
};

restore = function() {
  var p0, p1, p2, p3, p4, p5, p6, p7, p8, p9;
  if (frame > stack + TOS - 10) {
    stop("frame underflow");
  }
  p0 = frame[0];
  p1 = frame[1];
  p2 = frame[2];
  p3 = frame[3];
  p4 = frame[4];
  p5 = frame[5];
  p6 = frame[6];
  p7 = frame[7];
  p8 = frame[8];
  p9 = frame[9];
  return frame += 10;
};

swap = function() {
  var p, q;
  p = pop();
  q = pop();
  push(p);
  return push(q);
};

dupl = function() {
  var p;
  p = pop();
  push(p);
  return push(p);
};

//# sourceMappingURL=stack.js.map
