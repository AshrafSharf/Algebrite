// Generated by CoffeeScript 1.10.0
var clear_symbols, get_arglist, get_binding, get_printname, push_symbol, set_binding, set_binding_and_arglist, std_symbol, symnum, usr_symbol;

std_symbol = function(s, n) {
  var p;
  p = symtab[n];
  if (p == null) {
    debugger;
  }
  return p.printname = s;
};

usr_symbol = function(s) {
  var i, j, p, ref;
  for (i = j = 0, ref = NSYM; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    if (symtab[i].printname === 0) {
      break;
    }
    if (s === symtab[i].printname) {
      return symtab[i];
    }
  }
  if (i === NSYM) {
    stop("symbol table overflow");
  }
  p = symtab[i];
  p.printname = s;
  return p;
};

get_printname = function(p) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  return p.printname;
};

set_binding = function(p, q) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  binding[p - symtab] = q;
  return arglist[p - symtab] = symbol(NIL);
};

get_binding = function(p) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  return binding[p - symtab];
};

set_binding_and_arglist = function(p, q, r) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  binding[p - symtab] = q;
  return arglist[p - symtab] = r;
};

get_arglist = function(p) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  return arglist[p - symtab];
};

symnum = function(p) {
  if (p.k !== SYM) {
    stop("symbol error");
  }
  return Math.floor(p - symtab);
};

push_symbol = function(k) {
  return push(symtab[k]);
};

clear_symbols = function() {
  var i, j, ref, results;
  results = [];
  for (i = j = 0, ref = NSYM; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    binding[i] = symtab[i];
    results.push(arglist[i] = symbol(NIL));
  }
  return results;
};

//# sourceMappingURL=symbol.js.map
